"""Add fee calculation tables and remove old notary/register rates

Revision ID: 996a0eb9a24b
Revises: 256bb0e369e4
Create Date: 2025-07-13 19:56:46.514977

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "996a0eb9a24b"
down_revision: Union[str, None] = "256bb0e369e4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "fee_table_b",
        sa.Column(
            "geschaeftswert_from", sa.Numeric(precision=12, scale=2), nullable=False
        ),
        sa.Column(
            "geschaeftswert_to", sa.Numeric(precision=12, scale=2), nullable=True
        ),
        sa.Column("gebuehr", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_fee_table_b_geschaeftswert",
        "fee_table_b",
        ["geschaeftswert_from", "geschaeftswert_to"],
        unique=False,
    )
    op.create_table(
        "tenant_fee_configs",
        sa.Column(
            "notary_kaufvertrag_rate", sa.Numeric(precision=3, scale=1), nullable=False
        ),
        sa.Column(
            "notary_grundschuld_rate", sa.Numeric(precision=3, scale=1), nullable=False
        ),
        sa.Column(
            "notary_vollzug_rate", sa.Numeric(precision=3, scale=1), nullable=False
        ),
        sa.Column(
            "grundbuch_auflassung_rate",
            sa.Numeric(precision=3, scale=1),
            nullable=False,
        ),
        sa.Column(
            "grundbuch_eigentum_rate", sa.Numeric(precision=3, scale=1), nullable=False
        ),
        sa.Column(
            "grundbuch_grundschuld_rate",
            sa.Numeric(precision=3, scale=1),
            nullable=False,
        ),
        sa.Column(
            "notary_override_percentage",
            sa.Numeric(precision=5, scale=2),
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["tenant_id"], ["tenants.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_tenant_fee_config_tenant", "tenant_fee_configs", ["tenant_id"], unique=True
    )
    
    # Add check constraints for valid Gebührensätze values
    op.create_check_constraint(
        'check_notary_kaufvertrag_rate',
        'tenant_fee_configs',
        'notary_kaufvertrag_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.create_check_constraint(
        'check_notary_grundschuld_rate',
        'tenant_fee_configs',
        'notary_grundschuld_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.create_check_constraint(
        'check_notary_vollzug_rate',
        'tenant_fee_configs',
        'notary_vollzug_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.create_check_constraint(
        'check_grundbuch_auflassung_rate',
        'tenant_fee_configs',
        'grundbuch_auflassung_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.create_check_constraint(
        'check_grundbuch_eigentum_rate',
        'tenant_fee_configs',
        'grundbuch_eigentum_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.create_check_constraint(
        'check_grundbuch_grundschuld_rate',
        'tenant_fee_configs',
        'grundbuch_grundschuld_rate IN (0.2, 0.3, 0.5, 0.6, 1.0, 2.0)'
    )
    op.add_column(
        "properties",
        sa.Column(
            "notary_override_percentage",
            sa.Numeric(precision=5, scale=2),
            nullable=True,
        ),
    )
    op.drop_column("properties", "transaction_notary_rate")
    op.drop_column("properties", "transaction_register_rate")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "properties",
        sa.Column(
            "transaction_register_rate",
            sa.NUMERIC(precision=5, scale=2),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "properties",
        sa.Column(
            "transaction_notary_rate",
            sa.NUMERIC(precision=5, scale=2),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("properties", "notary_override_percentage")
    
    # Drop check constraints
    op.drop_constraint('check_notary_kaufvertrag_rate', 'tenant_fee_configs', type_='check')
    op.drop_constraint('check_notary_grundschuld_rate', 'tenant_fee_configs', type_='check')
    op.drop_constraint('check_notary_vollzug_rate', 'tenant_fee_configs', type_='check')
    op.drop_constraint('check_grundbuch_auflassung_rate', 'tenant_fee_configs', type_='check')
    op.drop_constraint('check_grundbuch_eigentum_rate', 'tenant_fee_configs', type_='check')
    op.drop_constraint('check_grundbuch_grundschuld_rate', 'tenant_fee_configs', type_='check')
    
    op.drop_index("idx_tenant_fee_config_tenant", table_name="tenant_fee_configs")
    op.drop_table("tenant_fee_configs")
    op.drop_index("idx_fee_table_b_geschaeftswert", table_name="fee_table_b")
    op.drop_table("fee_table_b")
    # ### end Alembic commands ###
