"""Add can_see_all_properties flag and property_assignments table

Revision ID: 33d670906202
Revises: 032f59326212
Create Date: 2025-07-22 23:06:09.478604

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "33d670906202"
down_revision: Union[str, None] = "032f59326212"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "property_assignments",
        sa.Column("property_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("assigned_by", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["assigned_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["property_id"], ["properties.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tenant_id"], ["tenants.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_property_assignments_property_user",
        "property_assignments",
        ["property_id", "user_id", "tenant_id"],
        unique=True,
    )
    op.create_index(
        "idx_property_assignments_user",
        "property_assignments",
        ["user_id", "tenant_id"],
        unique=False,
    )
    op.add_column(
        "users", sa.Column("can_see_all_properties", sa.Boolean(), nullable=False, server_default='false')
    )
    
    # Update existing tenant_admin and property_manager users to have can_see_all_properties = true
    op.execute("""
        UPDATE users 
        SET can_see_all_properties = true
        WHERE id IN (
            SELECT ur.user_id 
            FROM user_roles ur
            JOIN roles r ON ur.role_id = r.id
            WHERE r.name IN ('tenant_admin', 'property_manager')
        )
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("users", "can_see_all_properties")
    op.drop_index("idx_property_assignments_user", table_name="property_assignments")
    op.drop_index(
        "idx_property_assignments_property_user", table_name="property_assignments"
    )
    op.drop_table("property_assignments")
    # ### end Alembic commands ###
