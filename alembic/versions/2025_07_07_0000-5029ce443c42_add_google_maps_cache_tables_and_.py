"""Add Google Maps cache tables and migrate to micro_location_v2

Revision ID: 5029ce443c42
Revises: 88f055d85204
Create Date: 2025-07-07 00:00:17.312759

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "5029ce443c42"
down_revision: Union[str, None] = "88f055d85204"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "google_distance_cache",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("origin_lat", sa.Float(), nullable=False),
        sa.Column("origin_lng", sa.Float(), nullable=False),
        sa.Column("destination_lat", sa.Float(), nullable=False),
        sa.Column("destination_lng", sa.Float(), nullable=False),
        sa.Column("mode", sa.String(), nullable=False),
        sa.Column("distance_meters", sa.Integer(), nullable=True),
        sa.Column("duration_seconds", sa.Integer(), nullable=True),
        sa.Column(
            "raw_response", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_distance_route",
        "google_distance_cache",
        ["origin_lat", "origin_lng", "destination_lat", "destination_lng", "mode"],
        unique=False,
    )
    op.create_table(
        "google_geocoding_cache",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("formatted_address", sa.String(), nullable=True),
        sa.Column("place_id", sa.String(), nullable=True),
        sa.Column(
            "raw_response", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_google_geocoding_cache_address"),
        "google_geocoding_cache",
        ["address"],
        unique=False,
    )
    op.create_table(
        "google_places_cache",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("category", sa.String(), nullable=False),
        sa.Column("radius", sa.Integer(), nullable=False),
        sa.Column("places", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_places_location_category",
        "google_places_cache",
        ["latitude", "longitude", "category"],
        unique=False,
    )
    op.add_column("projects", sa.Column("micro_location_v2", sa.JSON(), nullable=True))
    op.drop_column("projects", "micro_location")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "projects",
        sa.Column(
            "micro_location",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_column("projects", "micro_location_v2")
    op.drop_index("idx_places_location_category", table_name="google_places_cache")
    op.drop_table("google_places_cache")
    op.drop_index(
        op.f("ix_google_geocoding_cache_address"), table_name="google_geocoding_cache"
    )
    op.drop_table("google_geocoding_cache")
    op.drop_index("idx_distance_route", table_name="google_distance_cache")
    op.drop_table("google_distance_cache")
    # ### end Alembic commands ###
