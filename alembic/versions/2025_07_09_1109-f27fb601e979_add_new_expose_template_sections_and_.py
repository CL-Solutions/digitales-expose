"""Add new expose template sections and image support

Revision ID: f27fb601e979
Revises: f0b6f636ab1f
Create Date: 2025-07-09 11:09:29.282243

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f27fb601e979"
down_revision: Union[str, None] = "f0b6f636ab1f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "expose_template_images",
        sa.Column("template_id", sa.UUID(), nullable=False),
        sa.Column("image_url", sa.Text(), nullable=False),
        sa.Column("image_type", sa.String(length=50), nullable=False),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("display_order", sa.Integer(), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column("width", sa.Integer(), nullable=True),
        sa.Column("height", sa.Integer(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("updated_by", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["template_id"], ["expose_templates.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["tenant_id"], ["tenants.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["updated_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column(
        "expose_templates",
        sa.Column("liability_disclaimer_content", sa.Text(), nullable=True),
    )
    op.add_column(
        "expose_templates",
        sa.Column("onsite_management_services", sa.JSON(), nullable=True),
    )
    op.add_column(
        "expose_templates",
        sa.Column("onsite_management_package", sa.JSON(), nullable=True),
    )
    op.add_column(
        "expose_templates", sa.Column("coliving_content", sa.Text(), nullable=True)
    )
    op.add_column(
        "expose_templates",
        sa.Column("special_features_items", sa.JSON(), nullable=True),
    )
    # ### end Alembic commands ###
    
    # Create RLS policies for expose_template_images
    op.execute("""
        ALTER TABLE expose_template_images ENABLE ROW LEVEL SECURITY;
        
        CREATE POLICY tenant_isolation ON expose_template_images
        FOR ALL USING (tenant_id = current_setting('app.current_tenant_id')::uuid);
        
        CREATE POLICY bypass_rls_policy ON expose_template_images
        FOR ALL USING (current_setting('app.bypass_rls', true)::text = 'on');
    """)
    
    # Update enabled_sections to include new sections
    op.execute("""
        UPDATE expose_templates 
        SET enabled_sections = jsonb_set(
            jsonb_set(
                jsonb_set(
                    jsonb_set(
                        enabled_sections::jsonb,
                        '{liability_disclaimer}',
                        'true'::jsonb
                    ),
                    '{onsite_management}',
                    'true'::jsonb
                ),
                '{coliving}',
                'true'::jsonb
            ),
            '{special_features}',
            'true'::jsonb
        )
        WHERE enabled_sections IS NOT NULL
    """)


def downgrade() -> None:
    """Downgrade schema."""
    # Drop RLS policies
    op.execute("""
        DROP POLICY IF EXISTS bypass_rls_policy ON expose_template_images;
        DROP POLICY IF EXISTS tenant_isolation ON expose_template_images;
    """)
    
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("expose_templates", "special_features_items")
    op.drop_column("expose_templates", "coliving_content")
    op.drop_column("expose_templates", "onsite_management_package")
    op.drop_column("expose_templates", "onsite_management_services")
    op.drop_column("expose_templates", "liability_disclaimer_content")
    op.drop_table("expose_template_images")
    # ### end Alembic commands ###
