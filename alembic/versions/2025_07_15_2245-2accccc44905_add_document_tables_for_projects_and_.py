"""Add document tables for projects and properties

Revision ID: 2accccc44905
Revises: 567fedd873d1
Create Date: 2025-07-15 22:45:17.214483

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "2accccc44905"
down_revision: Union[str, None] = "567fedd873d1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project_documents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("project_id", sa.UUID(), nullable=False),
        sa.Column(
            "document_type",
            sa.Enum(
                "EXPOSE",
                "DECLARATION_OF_DIVISION",
                "FLOOR_PLAN",
                "STATEMENTS",
                "LAND_REGISTRY_EXTRACT",
                "FACTSHEET",
                "LIVING_SPACE_CALCULATION",
                "INSURANCE_CERTIFICATE",
                "HOA_MINUTES",
                "BUSINESS_PLANS",
                "CADASTRAL_MAP_SITE_PLAN",
                "ENERGY_CERTIFICATE",
                "RENTAL_AGREEMENTS_RENT_INCREASES",
                "OTHER_DOCUMENTS_PROPERTY",
                "OTHER_DOCUMENTS_INTERNAL",
                name="documenttype",
            ),
            nullable=False,
        ),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column("s3_key", sa.String(length=500), nullable=False),
        sa.Column("s3_bucket", sa.String(length=255), nullable=False),
        sa.Column("display_order", sa.Integer(), nullable=True),
        sa.Column("uploaded_by", sa.UUID(), nullable=True),
        sa.Column("uploaded_at", sa.DateTime(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["project_id"], ["projects.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tenant_id"], ["tenants.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["uploaded_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "property_documents",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("property_id", sa.UUID(), nullable=False),
        sa.Column(
            "document_type",
            sa.Enum(
                "EXPOSE",
                "DECLARATION_OF_DIVISION",
                "FLOOR_PLAN",
                "STATEMENTS",
                "LAND_REGISTRY_EXTRACT",
                "FACTSHEET",
                "LIVING_SPACE_CALCULATION",
                "INSURANCE_CERTIFICATE",
                "HOA_MINUTES",
                "BUSINESS_PLANS",
                "CADASTRAL_MAP_SITE_PLAN",
                "ENERGY_CERTIFICATE",
                "RENTAL_AGREEMENTS_RENT_INCREASES",
                "OTHER_DOCUMENTS_PROPERTY",
                "OTHER_DOCUMENTS_INTERNAL",
                name="documenttype",
            ),
            nullable=False,
        ),
        sa.Column("title", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("file_name", sa.String(length=255), nullable=False),
        sa.Column("file_path", sa.String(length=500), nullable=False),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("mime_type", sa.String(length=100), nullable=True),
        sa.Column("s3_key", sa.String(length=500), nullable=False),
        sa.Column("s3_bucket", sa.String(length=255), nullable=False),
        sa.Column("display_order", sa.Integer(), nullable=True),
        sa.Column("uploaded_by", sa.UUID(), nullable=True),
        sa.Column("uploaded_at", sa.DateTime(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("tenant_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(["property_id"], ["properties.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tenant_id"], ["tenants.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["uploaded_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("property_documents")
    op.drop_table("project_documents")
    # ### end Alembic commands ###
